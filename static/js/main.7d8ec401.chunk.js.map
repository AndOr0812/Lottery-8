{"version":3,"sources":["logo.svg","utils/getWeb3.js","Components/Form.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","results","provider","wrap","_context","prev","next","ethereum","web3","Web3","enable","console","log","t0","currentProvider","providers","HttpProvider","stop","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","num","time","lottery","Bet","bind","assertThisInitialized","ShowByAddress","handleNum","_this2","then","eth","getAccounts","error","acc","setState","catch","LotteryInstance","_this3","Lottery","require","contract","LotteryContract","setProvider","accounts","at","instance","result","bet","from","value","gasLimit","gasPrice","e","target","_this4","showByAddress","lotteries","i","push","_react_16_8_6_react_default","createElement","className","words","type","onChange","onClick","Component","App","address","src","logo","alt","Components_Form","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7d8ec401.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6f9316c1.svg\";","import Web3 from 'web3'\n\nlet getWeb3 = new Promise(function(resolve, reject) {\n  // Wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', async() => {\n    var results\n    \n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          results = {\n            web3: window.web3\n          }\n          console.log('Injected ethereum web3 detected.');\n          resolve(results)\n          // Acccounts now exposed\n      } catch (error) {\n          // User denied account access...\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      results = {\n        web3: window.web3\n      }\n      console.log('Injected web3 detected.');\n      resolve(results)\n      // Acccounts always exposed\n    }\n    // Non-dapp browsers...\n    else {\n      var provider = new Web3.providers.HttpProvider('http://127.0.0.1:9545')\n      results = {\n        web3: new Web3(provider)\n      }\n      console.log('No web3 instance injected, using Local web3.');\n      resolve(results)\n    }\n\n  })\n})\nexport default getWeb3","import React, { Component } from 'react';\nimport getWeb3 from '../utils/getWeb3.js';\nimport LotteryContract from '../contracts/Lottery.json';\nimport '../App.css';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          web3: '',\n          num: '',\n          time: [],\n          lottery: [],\n          state: []\n        };\n        this.Bet = this.Bet.bind(this);\n        this.ShowByAddress = this.ShowByAddress.bind(this);\n        this.handleNum = this.handleNum.bind(this);\n    }\n\n    componentDidMount(){\n      getWeb3.then(results => {\n        /*After getting web3, we save the informations of the web3 user by\n        editing the state variables of the component */\n        results.web3.eth.getAccounts( (error,acc) => {\n          //this.setState is used to edit the state variables\n          this.setState({\n            web3: results.web3\n          })\n        });\n        //At the end of the first promise, we return the loaded web3\n        return results.web3\n      }).catch( () => {\n        //If no web3 provider was found, log it in the console\n        console.log('Error finding web3.')\n      })\n    }\n\n    Bet(){\n      const contract = require('truffle-contract');\n      const Lottery = contract(LotteryContract);\n      const contracAddress = \"0xa24fC97c77013705e42ac23FB2593C49236B94c4\";\n      Lottery.setProvider(this.state.web3.currentProvider);\n      var LotteryInstance;\n      this.state.web3.eth.getAccounts((error, accounts) => {\n          Lottery.at(contracAddress).then((instance) => {\n            LotteryInstance = instance\n          }).then((result) => {\n            // Get the value from the contract to prove it worked.\n            return LotteryInstance.bet(this.state.num, {from: accounts[0],\n            value: 1e17, gasLimit:7600027, gasPrice:5e9})\n          }).catch(() => {\n            console.log(\"Error with Lottery\")\n          })\n        })\n    }\n\n    handleNum(e) {\n      this.setState({num: e.target.value});\n    }\n\n    ShowByAddress(){\n      const contract = require('truffle-contract');\n      const Lottery = contract(LotteryContract);\n      const contracAddress = \"0xa24fC97c77013705e42ac23FB2593C49236B94c4\";\n      Lottery.setProvider(this.state.web3.currentProvider);\n      var LotteryInstance;\n      this.state.web3.eth.getAccounts((error, accounts) => {\n        Lottery.at(contracAddress).then((instance) => {\n          LotteryInstance = instance\n        }).then((result) => {\n          // Get the value from the contract to prove it worked.\n          return LotteryInstance.showByAddress.call({from: accounts[0]})\n        }).then((result) => {\n          this.setState({\n            time: result[0],\n            lottery: result[1],\n            state: result[2]\n          })\n          console.log(result[1]);\n        })\n      })\n    }\n\n    render(){\n      const lotteries = []\n      for (const i in this.state.time) {\n        lotteries.push(\n          <div>\n            <div className=\"App-list\">time: {this.state.time[i].words[0]}</div>\n            <div className=\"App-list\">lottery: {this.state.lottery[i].words[0]}</div>\n            <div className=\"App-list\">state: {this.state.state[i].words[0]}</div>\n            <hr/>\n          </div>\n        )\n      }\n\n      return(\n        <div>\n          <h3 className=\"App-intro\">BET NOW!</h3>\n          <hr/>\n          <h5 className=\"App-intro\"> Bet on your lucky number:</h5>\n          <div className=\"input-group\">\n                  <input type=\"number\" className=\"form-control\" onChange={this.handleNum}/>\n          </div>\n          <br/>\n          <button onClick={this.Bet}>Bet</button>\n          <br/>\n          <hr/>\n          <div>\n            {lotteries}\n          </div>\n          <br/>\n          <button onClick={this.ShowByAddress}>show my tickets</button>\n          <br/>\n        </div>\n      )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport getWeb3 from './utils/getWeb3.js';\nimport Form from './Components/Form.jsx';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      web3: '',\n      address: '',\n    };\n  }\n\n  componentDidMount() {\n    getWeb3.then(results => {\n      /*After getting web3, we save the informations of the web3 user by\n      editing the state variables of the component */\n      results.web3.eth.getAccounts( (error,acc) => {\n        //this.setState is used to edit the state variables\n        this.setState({\n          address: acc[0],\n          web3: results.web3\n        })\n      });\n    }).catch( () => {\n      //If no web3 provider was found, log it in the console\n      console.log('Error finding web3.')\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" >\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to Lottery Game</h1>\n        </header>\n        <div className=\"App-content\">\n          <Form className=\"App-form\"/>\n          <p className=\"App-intro\">\n            *bet 0.1 eth on any integer from 0 to 100.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}